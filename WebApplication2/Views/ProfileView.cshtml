@using WebApplication2.ViewModels
@model UserProfileViewModel
@{
    ViewData["Title"] = "User Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="profile-container">
    <div class="profile-header">
        <h1 class="profile-title">User Profile</h1>
        
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }
    </div>
    
    <div class="profile-card">
        <div class="profile-info">
            <div class="profile-avatar">
                <i class="ri-user-3-fill"></i>
            </div>
            
            <div class="profile-details">
                <div class="profile-item">
                    <label class="profile-label">@Html.DisplayNameFor(model => model.FirstName):</label>
                    <span class="profile-value">@Html.DisplayFor(model => model.FirstName)</span>
                </div>
                
                <div class="profile-item">
                    <label class="profile-label">@Html.DisplayNameFor(model => model.LastName):</label>
                    <span class="profile-value">@Html.DisplayFor(model => model.LastName)</span>
                </div>
                
                <div class="profile-item">
                    <label class="profile-label">@Html.DisplayNameFor(model => model.Email):</label>
                    <span class="profile-value">@Html.DisplayFor(model => model.Email)</span>
                </div>
                
                <div class="profile-item">
                    <label class="profile-label">@Html.DisplayNameFor(model => model.Role):</label>
                    <span class="profile-value profile-role">@Html.DisplayFor(model => model.Role)</span>
                </div>
                
                <div class="profile-item">
                    <label class="profile-label">@Html.DisplayNameFor(model => model.CreatedAt):</label>
                    <span class="profile-value">@Html.DisplayFor(model => model.CreatedAt)</span>
                </div>
                
                <div class="profile-item">
                    <label class="profile-label">@Html.DisplayNameFor(model => model.BookingCount):</label>
                    <span class="profile-value">@Html.DisplayFor(model => model.BookingCount)</span>
                </div>
            </div>
        </div>
        
        <div class="profile-actions">
            <a asp-controller="Account" asp-action="EditProfile" class="btn btn-primary">
                <i class="ri-edit-line"></i> Edit Profile
            </a>
            
            <a asp-controller="Account" asp-action="ChangePassword" class="btn btn-secondary">
                <i class="ri-lock-password-line"></i> Change Password
            </a>
            
            <form asp-controller="Account" asp-action="Logout" method="post" class="logout-form">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to logout?')">
                    <i class="ri-logout-box-line"></i> Logout
                </button>
            </form>
        </div>
    </div>
</div>

<style>
.profile-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 0 1rem;
}

.profile-header {
    text-align: center;
    margin-bottom: 2rem;
}

.profile-title {
    color: #333;
    margin-bottom: 1rem;
}

.profile-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 2rem;
}

.profile-info {
    display: flex;
    align-items: flex-start;
    gap: 2rem;
    margin-bottom: 2rem;
}

.profile-avatar {
    width: 120px;
    height: 120px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 3rem;
    flex-shrink: 0;
}

.profile-details {
    flex: 1;
}

.profile-item {
    display: flex;
    margin-bottom: 1rem;
    align-items: center;
}

.profile-label {
    font-weight: 600;
    color: #555;
    min-width: 140px;
    margin-right: 1rem;
}

.profile-value {
    color: #333;
    font-size: 1.1rem;
}

.profile-role {
    background: #e3f2fd;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    color: #1976d2;
    font-weight: 500;
    font-size: 0.9rem;
}

.profile-actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
    padding-top: 2rem;
    border-top: 1px solid #eee;
}

.btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-primary {
    background: #007bff;
    color: white;
}

.btn-primary:hover {
    background: #0056b3;
    color: white;
}

.btn-secondary {
    background: #6c757d;
    color: white;
}

.btn-secondary:hover {
    background: #545b62;
    color: white;
}

.btn-danger {
    background: #dc3545;
    color: white;
}

.btn-danger:hover {
    background: #c82333;
}

.logout-form {
    display: inline;
}

.alert {
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1rem;
}

.alert-success {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

</style>